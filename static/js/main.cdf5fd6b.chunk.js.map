{"version":3,"sources":["Tweet.js","App.js","reportWebVitals.js","index.js"],"names":["Tweet","name","message","useState","count","setCount","className","onClick","App","users","map","user","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMA4BeA,MAxBf,YAAgC,IAAhBC,EAAe,EAAfA,KAAMC,EAAS,EAATA,QAClB,EAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAMA,OACI,sBAAKC,UAAU,QAAf,UACI,6BACKL,IAEL,4BACKC,IAEL,wBAAQK,QAZE,WAClBF,EAASD,EAAQ,IAWT,kBAGA,iDACA,6BAAKA,QCCFI,MApBf,WACE,MAA0BL,mBAAS,CACjC,CAACF,KAAM,QAASC,QAAS,eACzB,CAACD,KAAM,SAAUC,QAAS,eAC1B,CAACD,KAAM,OAAQC,QAAQ,kBAHzB,mBAAOO,EAAP,KAQA,OARA,KASE,qBAAKH,UAAU,MAAf,SACGG,EAAMC,KAAI,SAAAC,GAAI,OACb,cAAC,EAAD,CAAOV,KAAMU,EAAKV,KAAMC,QAASS,EAAKT,gBCJ/BU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.cdf5fd6b.chunk.js","sourcesContent":["import React , {useState} from 'react';\r\n\r\nimport './App.css';\r\n\r\nfunction Tweet({name, message}){\r\n    const [count, setCount] = useState(0);\r\n\r\n    const increment = () =>{\r\n    setCount(count + 1);\r\n  };\r\n \r\n    return (\r\n        <div className=\"tweet\">\r\n            <h3>\r\n                {name}\r\n            </h3>\r\n            <p>\r\n                {message}\r\n            </p>\r\n            <button onClick={increment}>\r\n                Like\r\n            </button>\r\n            <h4>Number of Likes</h4>\r\n            <h1>{count}</h1>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Tweet;","import React, {useState} from 'react';\nimport Tweet from './Tweet';\n\n\nfunction App(){\n  const [users, setUsers] = useState([\n    {name: \"Kevin\", message: 'Hello there'},\n    {name: \"Kashif\", message: 'I am Kashif'},\n    {name: \"John\", message:\"I am awesome\"}\n  ]);\n\n  \n  \n  return (\n    <div className=\"app\">\n      {users.map(user =>(\n        <Tweet name={user.name} message={user.message}/>\n      ))}\n      \n      \n    </div>\n  );\n      }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}